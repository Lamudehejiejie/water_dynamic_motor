#include <M5Unified.h>
#include <Dynamixel2Arduino.h>

// M5Stack DMX Base for CoreS3
#define DXL_SERIAL Serial1
#define TXD_PIN 7   // DMX Base TX pin
#define RXD_PIN 10  // DMX Base RX pin
#define DXL_DIR_PIN 6    // DMX Base EN (direction control) pin

const uint8_t DXL_ID = 1;
const float DXL_PROTOCOL_VERSION = 2.0;
const uint32_t DXL_BAUD_RATE = 57600;

Dynamixel2Arduino dxl(DXL_SERIAL, DXL_DIR_PIN);

unsigned long start_time = 0;
const int CYCLE_TIME = 5000;
const int MAX_POSITION = 4095;

void setup() {
    auto cfg = M5.config();
    M5.begin(cfg);

    M5.Display.clear();
    M5.Display.setTextSize(1);
    M5.Display.setCursor(10, 10);
    M5.Display.println("Motor Control");

    // Initialize Serial1 with DMX Base pins
    Serial1.begin(DXL_BAUD_RATE, SERIAL_8N1, RXD_PIN, TXD_PIN);

    // Initialize Dynamixel
    dxl.begin(DXL_BAUD_RATE);
    dxl.setPortProtocolVersion(DXL_PROTOCOL_VERSION);

    M5.Display.setCursor(10, 30);
    M5.Display.println("Pinging motor...");

    // Try to find motor
    if(dxl.ping(DXL_ID)) {
        M5.Display.setCursor(10, 50);
        M5.Display.println("Motor FOUND!");

        // Setup motor
        dxl.torqueOff(DXL_ID);
        dxl.setOperatingMode(DXL_ID, OP_POSITION);
        dxl.torqueOn(DXL_ID);

        M5.Display.setCursor(10, 70);
        M5.Display.println("Torque ON");
    } else {
        M5.Display.setCursor(10, 50);
        M5.Display.println("Motor NOT found!");
    }

    start_time = millis();
    delay(1000);
}

void loop() {
    M5.update();

    // Calculate time within current cycle (0-5000ms)
    unsigned long cycle_time = (millis() - start_time) % CYCLE_TIME;

    int position;
    // Simple acceleration: ease-in-out using sine wave
    float progress = (float)cycle_time / CYCLE_TIME;  // 0.0 to 1.0
    float ease = (sin((progress - 0.5) * PI) + 1.0) / 2.0;  // Smooth S-curve

    // Map to position (0 to 4095 and back)
    if (cycle_time < CYCLE_TIME / 2) {
        // First half: 0 to 4095
        position = (int)(ease * MAX_POSITION * 2);
        if (position > MAX_POSITION) position = MAX_POSITION;
    } else {
        // Second half: 4095 to 0
        position = (int)((1.0 - ease) * MAX_POSITION * 2);
        if (position > MAX_POSITION) position = MAX_POSITION;
    }

    // Send position command to Dynamixel
    dxl.setGoalPosition(DXL_ID, position);

    // Get current position
    int32_t present_position = dxl.getPresentPosition(DXL_ID);

    // Debug display
    M5.Display.setCursor(10, 100);
    M5.Display.printf("Time: %lu ms  ", cycle_time);
    M5.Display.setCursor(10, 120);
    M5.Display.printf("Goal: %d      ", position);
    M5.Display.setCursor(10, 140);
    M5.Display.printf("Curr: %d      ", present_position);

    delay(50);
}